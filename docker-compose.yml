version: '3.8'

services:
  postgresql:
    image: postgres:14-alpine
    container_name: bakimonarim-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@ssw0rd
      POSTGRES_DB: bakimonarimapp
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bakimonarim-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bakimonarim-app
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:P@ssw0rd@postgresql:5432/bakimonarimapp?schema=public
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-supersecretkey}
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    networks:
      - bakimonarim-network
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 20 &&
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Seeding database with dummy data...' &&
        npx prisma db seed &&
        echo 'Starting application in development mode...' &&
        npm run dev
      "

volumes:
  postgres_data:
    name: bakimonarim-postgres-data

networks:
  bakimonarim-network:
    driver: bridge
